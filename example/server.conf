lua_shared_dict prometheus_memory 10M;
lua_package_path "/opt/prometheus/?.lua;;";

log_by_lua_block {
    local collector = require("lib.collectors")
    collector.requests(ngx.var.server_name, ngx.var.status, ngx.var.server_protocol, ngx.var.request_method)
    collector.latency(ngx.var.server_name, ngx.var.request_time)
    -- collector.bandwith(ngx.var.server_name, 1000, 2000)
    collector.bandwith(ngx.var.server_name, ngx.var.bytes_received, ngx.var.bytes_sent)
}

server {
    listen      80 default;
    server_name _;

    index index.html;

    location / {
          try_files $uri $uri/ =404;
    }

    location /favicon.ico {
        access_log off;
        error_log off;
    }

    location /proxy {
        rewrite ^/proxy(.*) /$1 break;
        proxy_pass http://winphone.ir;
    }

    location /metrics {
        content_by_lua_block {
            local prometheus = require("nginx-lua-exporter")
            local collector = require("lib.collectors")

            collector.connection(
                                ngx.var.connections_reading,
                                ngx.var.connections_waiting,
                                ngx.var.connections_writing
                              )

            prometheus.metrics();
        }
    }
}

server {
    listen      80;
    server_name example.com;

    index index.html;

    location / {
          try_files $uri $uri/ =404;
    }

    location /favicon.ico {
        access_log off;
        error_log off;
    }
}

server {
    listen      80;
    server_name bar.com;

    index index.html;

    location / {
          try_files $uri $uri/ =404;
    }

    location /favicon.ico {
        access_log off;
        error_log off;
    }
}

server {
    listen      80;
    server_name foo.com;

    index index.html;

    location / {
          try_files $uri $uri/ =404;
    }

    location /favicon.ico {
        access_log off;
        error_log off;
    }
}